


@@ -66,6 +66,23 @@ AC_CHECK_LIB(util, openpty, EXTRA_LIBS="$EXTRA_LIBS -lutil")
AC_CHECK_LIB(socket, socket, EXTRA_LIBS="$EXTRA_LIBS -lsocket")
AC_CHECK_LIB(nsl, gethostbyname, EXTRA_LIBS="$EXTRA_LIBS -lnsl")

AC_CHECK_TOOLS([OBJCOPY], [objcopy])

AC_SUBST(OBJCOPY_FLAGS)
case $host in
  x86_64*|amd64*)
    OBJCOPY_FLAGS="elf64-x86-64"
    ;;
  arm*)
    #ENHANCEMENT: his is most common but Arm can be 32/64 and big/little
    OBJCOPY_FLAGS="el64-little"
    ;;
  i[[3456789]]86*)
    OBJCOPY_FLAGS="elf32-i386"
    ;;
esac


GFTP_TEXT=""
USE_READLINE="yes"
READLINE_LIBS=""
@@ -198,3 +215,15 @@ AC_CONFIG_FILES(
	po/Makefile
)
AC_OUTPUT

AS_ECHO("
$as_me: Finished.  Do '${ac_make}' to compile gftp.
") >&AS_MESSAGE_FD

dnl Local Variables:
dnl comment-start: "dnl "
dnl comment-end: ""
dnl comment-start-skip: "\\bdnl\\b\\s *"
dnl compile-command: "autoreconf --warnings=all"
dnl End:

  9 changes: 7 additions & 2 deletions9  
src/gtk/Makefile.am
@@ -2,7 +2,8 @@

bin_PROGRAMS = gftp-gtk

gftp_gtk_SOURCES = bookmarks.c \
gftp_gtk_SOURCES = \
	bookmarks.c \
	chmod_dialog.c \
	dnd.c \
	gftp-gtk.c \
@@ -19,6 +20,10 @@ gftp_gtk_SOURCES = bookmarks.c \

AM_CPPFLAGS = $(GTK_CFLAGS) $(PTHREAD_CFLAGS)

LDADD = ../../lib/libgftp.a ../uicommon/libgftpui.a $(GTK_LIBS) $(PTHREAD_LIBS) $(EXTRA_LIBS) $(GTHREAD_LIBS) $(SSL_LIBS) $(LIBINTL)
LDADD = authors.o ../../lib/libgftp.a ../uicommon/libgftpui.a $(GTK_LIBS) $(PTHREAD_LIBS) $(EXTRA_LIBS) $(GTHREAD_LIBS) $(SSL_LIBS) $(LIBINTL)

noinst_HEADERS = gftp-gtk.h

authors.o :
	$(OBJCOPY) --input binary --output $(OBJCOPY_FLAGS) $(top_srcdir)/AUTHORS $(top_srcdir)/src/gtk/authors.o

  47 changes: 38 additions & 9 deletions47  


src/gtk/menu-items.c
@@ -358,18 +358,47 @@ void  clear_cache (gpointer data)
  gftp_clear_cache_files ();
}

extern FILE _binary_______AUTHORS_start;

const gchar** generate_authors_list()
{
  FILE *fp = NULL;
  char *buffer;
  const gchar **authors  = NULL;
  int n_spaces = 0;

  /* read the start of the binary block */
  fp = &_binary_______AUTHORS_start;

  /* Create new pointer to array buffer for all the authors */
  buffer = (char*)malloc(1024 * (((sizeof(*fp)) + (sizeof(size_t)))) + 1);

  /* Break in to proper multivalue array */
  buffer = strtok ((char*)fp, "\n");

  /* split string and append tokens to 'authors' */
  while (buffer) {
    authors = realloc (authors, sizeof (char*) * ++n_spaces);
    authors[n_spaces-1] = buffer;
    buffer = strtok (NULL, "\n");
  }

  /* Ensure element for the last NULL */ 
  authors[n_spaces] = 0;

  /* debugging: print the results */
  //int i; for (i = 0; i < (n_spaces+1); ++i){printf ("authors[%d] = %s\n", i, authors[i]);}

  return authors;
}

void about_dialog (gpointer data)
{
    DEBUG_PRINT_FUNC
    GtkWidget *w;
    const gchar * authors[] =
    {
        "Brian Masney <masneyb@gftp.org>",
        NULL
    };
    /* TRANSLATORS: Replace this string with your names, one name per line. */
    gchar * translators = _("Translated by");
    const gchar **authors = NULL;

    authors = generate_authors_list();

    GdkPixbuf * logo = NULL;
    char * logopath = get_image_path ("gftp-logo.xpm"); /* misc-gtk.c */
@@ -382,14 +411,14 @@ void about_dialog (gpointer data)
    w = g_object_new (GTK_TYPE_ABOUT_DIALOG,
                      "version",      VERSION,
                      "program-name", "gFTP",
                      "copyright",    "Copyright (C) 1998-2020",
                      "copyright",    "Copyright (C) 1998-2023",
                      "comments",     _("A multithreaded ftp client"),
                      "license",      "MIT - see LICENSE file.",
                      "website",      "http://www.gftp.org",
                      "authors",      authors,
                      "translator-credits", translators,
                      "logo",         logo,
                      NULL);

    gtk_container_set_border_width (GTK_CONTAINER (w), 2);
    set_window_icon (GTK_WINDOW (w), NULL);
    gtk_window_set_transient_for (GTK_WINDOW (w), main_window);
